import { type Metadata } from 'next'
import { ClerkProvider } from '@clerk/nextjs'
import { validateEnv } from '@/lib/validateEnv'
import { Geist, Geist_Mono } from 'next/font/google'
import Header from '@/components/Header'
import ErrorBoundary from '@/components/ErrorBoundary'
import './globals.css'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Clerk Next.js Quickstart',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  // Fail fast in production if critical envs are missing
  if (process.env.NODE_ENV === 'production') {
    validateEnv(true)
  }
  return (
    <ClerkProvider
      afterSignInUrl="/dashboard"
      afterSignUpUrl="/dashboard"
    >
      <html lang="en" suppressHydrationWarning>
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`} suppressHydrationWarning={true}>
          <ErrorBoundary>
            <Header />
            {children}
          </ErrorBoundary>
        </body>
      </html>
    </ClerkProvider>
  )
}
